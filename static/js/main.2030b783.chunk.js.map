{"version":3,"sources":["components/Welcome.js","store.js","components/Example1.js","components/Example2.js","components/Example3.js","components/Example4.js","components/Example5.js","components/Example6.js","index.js"],"names":["Welcome","props","class","store","createStore","persist","saveState","key","value","isInitialSet","doStateSaving","serializedState","JSON","stringify","window","localStorage","setItem","func","timeout","timer","args","clearTimeout","setTimeout","apply","debounce","processStateSaving","loadState","noState","getItem","parse","err","removeState","removeItem","clear","setState","Example1","useState","name","setName","type","onChange","e","target","placeholder","href","height","weight","Example2","user","updateUser","Example3","default","color","setColor","onClick","remove","Example4","birthYear","setBirthYear","Example5","selector","patcher","val","setHeight","setInterval","getState","setValue","count","Example6","ReactDOM","render","base","to","exact","path","component","document","querySelector"],"mappings":"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","file":"static/js/main.2030b783.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction Welcome(props) {\n    return (\n        <div class=\"welcome-msg\">\n            âœ¨ <br/>\n            ðŸŽ‰ðŸŽ‰ðŸŽ‰ <br/>\n            Hello!, Welcome!, Select an example to interact with.\n        </div>\n    );\n}\n\nexport default Welcome;\n","import { createStore } from 'state-pool';\n\nconst store = createStore();\n\n\n// ===================================================\n// Use this if you want to allow store persistance in local storage\n\nfunction debounce(func, timeout) {\n    let timer;\n    return (...args) => {\n        clearTimeout(timer);\n        timer = setTimeout(() => { func.apply(this, args); }, timeout);\n    };\n}\n\nstore.persist({\n    //PERSIST_ENTIRE_STORE: true,  // Use this only if you want to persist the entire store\n    saveState: function (key, value, isInitialSet) {\n        \n        const doStateSaving = () => {\n            try {\n                const serializedState = JSON.stringify(value);\n                window.localStorage.setItem(key, serializedState);\n            } catch {\n                // Ignore write errors\n            }\n        }\n\n        if (isInitialSet) {\n            // We don't debounce saving state since it's the initial set\n            // so it's called only once and we need our storage to be updated\n            // right away\n            doStateSaving();\n        }\n        else {\n            // Here we debounce saving state because it's the update and this function\n            // is called every time the store state changes. However, it should not\n            // be called too often because it triggers the expensive `JSON.stringify` operation.\n            const DEBOUNCE_TIME = 1000 // In milliseconds\n             // Debounce doStateSaving before calling it\n            const processStateSaving = debounce(doStateSaving, DEBOUNCE_TIME);\n            processStateSaving()  // save State\n        }\n    },\n    loadState: function (key, noState) {\n        try {\n            const serializedState = window.localStorage.getItem(key);\n            if (serializedState === null) {\n                // No state saved\n                return noState;\n            }\n            return JSON.parse(serializedState);\n        } catch (err) {\n            // Failed to load state\n            return undefined\n        }\n    },\n    removeState: function (key) {\n        window.localStorage.removeItem(key);\n    },\n    clear: function () {\n        window.localStorage.clear();\n    }\n})\n// ===================================================\n\n\nexport default store;\n","import React from 'react';\nimport store from '../store';\n\n\nstore.setState(\"name\", \"\");\n\nfunction Example1(props) {\n    const [name, setName] = store.useState(\"name\");\n\n    const updateName = (e) => {\n        setName(e.target.value);\n    }\n\n    return (\n        <div>\n            <br /><h3>Example 1</h3><br />\n            My name is {name? name: \"___\"}  <br /><br />\n            <label>Name</label>\n            <input type=\"text\" value={name} onChange={updateName} placeholder=\"Enter your name\" />\n\n\n            <div class=\"description\">\n                This is a simple example showing how to use state-pool <br/>\n                <a href=\"https://github.com/yezyilomo/state-pool-examples/blob/main/src/components/Example1.js\">\n                    View code\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default Example1;\n","import React from 'react';\nimport store from '../store';\n\n\nstore.setState(\"user\", { height: \"\", weight: \"\" });\n\nfunction Example2(props) {\n    const [name,] = store.useState(\"name\")\n    const [user, , updateUser] = store.useState(\"user\")\n\n    const updateHeight = (e) => {\n        updateUser(user => { user.height = e.target.value });\n    }\n\n    const updateWeight = (e) => {\n        updateUser(user => { user.weight = e.target.value });\n    }\n\n    return (\n        <div>\n            <br /><h3>Example 2</h3><br />\n            My name is {name? name: \"___\"}  <br /><br />\n            My height is {user.height ? `${user.height} m` : '___'} ,\n            and my weight is {user.weight ? `${user.weight} kg` : '___'}  <br /><br />\n\n            <label>Height</label>\n            <input type=\"text\" value={user.height} onChange={updateHeight} placeholder=\"Enter your height\" /> <br />\n            <br />\n            <label>Weight</label>\n            <input type=\"text\" value={user.weight} onChange={updateWeight} placeholder=\"Enter your weight\" />\n\n\n            <div class=\"description\">\n                In this example we use the updater to update a nested global state<br/>\n                <a href=\"https://github.com/yezyilomo/state-pool-examples/blob/main/src/components/Example2.js\">\n                    View code\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default Example2;\n","import React from 'react';\nimport store from '../store';\n\n\nfunction Example3(props) {\n    const [color, setColor] = store.useState(\"favColor\", { default: \"Black\" })\n\n    const updateColor = (e) => {\n        setColor(e.target.value);\n    }\n\n    const reset = (e) => {\n        store.remove(\"favColor\", () => { })\n    }\n\n    return (\n        <div>\n            <br /><h3>Example 3</h3><br />\n            My favourite color is {color} <br /><br />\n            <label>Fav Color</label>\n            <input type=\"text\" value={color} onChange={updateColor} placeholder=\"Enter your fav color\" />\n            <button onClick={reset}>Reset</button>\n\n\n            <div class=\"description\">\n                In this example we initialize a global state dynamically\n                by using a \"default\" configuration<br/>\n                <a href=\"https://github.com/yezyilomo/state-pool-examples/blob/main/src/components/Example3.js\">\n                    View code\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default Example3;\n","import React from 'react';\nimport store from '../store';\n\n\nstore.setState(\"birthYear\", \"\", {persist: true});\n\nfunction Example4(props) {\n    const [birthYear, setBirthYear] = store.useState(\"birthYear\");\n\n    const updateBirthYear = (e) => {\n        setBirthYear(e.target.value);\n    }\n\n    return (\n        <div>\n            <br /><h3>Example 4</h3><br />\n            My birth year is {birthYear? birthYear: \"___\"}  <br /><br />\n            <label>Birth Year</label>\n            <input type=\"text\" value={birthYear} onChange={updateBirthYear} placeholder=\"Enter your birth year\" />\n\n\n            <div class=\"description\">\n                In this example we're persisting year of birth to the local storage,\n                that's why even if you refresh the app, birth of year doesn't change<br/>\n                <a href=\"https://github.com/yezyilomo/state-pool-examples/blob/main/src/components/Example4.js\">\n                    View code\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default Example4;\n","import React from 'react';\nimport store from '../store';\n\n\nfunction Example5(props) {\n    const [height, setHeight] = store.useState(\"user\", {\n        selector: user => user.height,\n        patcher: (user, val) => { user.height = val }\n    });\n\n    const updateHeight = (e) => {\n        setHeight(e.target.value);\n    }\n\n    return (\n        <div>\n            <br /><h3>Example 5</h3><br />\n            My height is {height ? `${height} m` : '___'} <br /><br />\n            <label>Height</label>\n            <input type=\"text\" value={height} onChange={updateHeight} placeholder=\"Enter your height\" />\n\n\n            <div class=\"description\">\n                In this example we subscribe and update nested global state(user.height)\n                by using \"selector\" and \"patcher\" configurations<br/>\n                <a href=\"https://github.com/yezyilomo/state-pool-examples/blob/main/src/components/Example5.js\">\n                    View code\n                </a>\n            </div>\n        </div>\n    );\n}\n\nexport default Example5;\n","import React from 'react';\nimport store from '../store';\n\n\nstore.setState(\"count\", 0);\n\nfunction Example6(props) {\n    const [count, ] = store.useState(\"count\");\n\n    return (\n        <div>\n            <br /><h3>Example 6</h3><br />\n            Count {count}  <br /><br /><br />\n\n\n            <div class=\"description\">\n                In this example we're updating a global state from outside a react component<br/>\n                <a href=\"https://github.com/yezyilomo/state-pool-examples/blob/main/src/components/Example6.js\">\n                    View code\n                </a>\n            </div>\n        </div>\n    );\n}\n\n// Update global state from outside a component\nsetInterval(() => {\n    store.getState(\"count\").setValue(\n        count => count + 1\n    )\n}, 1000);\n\n\nexport default Example6;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {\n    HashRouter as Router, Switch, Route, Link\n} from 'react-router-dom';\n\nimport Welcome from './components/Welcome';\nimport Example1 from './components/Example1'\nimport Example2 from './components/Example2';\nimport Example3 from './components/Example3';\nimport Example4 from './components/Example4';\nimport Example5 from './components/Example5';\nimport Example6 from './components/Example6';\n\n\nfunction Application(props) {\n    return (\n        <Router base=\"/\">\n            <br/> <br/>\n            <Link to=\"/example1\">Example1</Link> &nbsp; &nbsp;\n            <Link to=\"/example2\">Example2</Link> &nbsp; &nbsp;\n            <Link to=\"/example3\">Example3</Link> &nbsp; &nbsp;\n            <Link to=\"/example4\">Example4</Link> &nbsp; &nbsp;\n            <Link to=\"/example5\">Example5</Link> &nbsp; &nbsp;\n            <Link to=\"/example6\">Example6</Link>\n            <Switch>\n                <Route exact path=\"/\" component={Welcome} />\n                <Route exact path=\"/example1\" component={Example1} />\n                <Route exact path=\"/example2\" component={Example2} />\n                <Route exact path=\"/example3\" component={Example3} />\n                <Route exact path=\"/example4\" component={Example4} />\n                <Route exact path=\"/example5\" component={Example5} />\n                <Route exact path=\"/example6\" component={Example6} />\n            </Switch>\n        </Router>\n    );\n}\n\nReactDOM.render(<Application/>, document.querySelector(\"#root\"));\n"],"sourceRoot":""}