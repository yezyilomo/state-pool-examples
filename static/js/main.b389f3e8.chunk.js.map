{"version":3,"sources":["store.js","components/Example1.js","components/Example2.js","components/Example3.js","index.js"],"names":["store","createStore","setState","Example1","props","useState","name","setName","type","value","onChange","e","target","placeholder","height","weight","Example2","user","updateUser","Example3","default","color","setColor","onClick","remove","ReactDOM","render","base","to","exact","path","component","document","querySelector"],"mappings":"2QA8DeA,EA5DDC,wBCEdD,EAAME,SAAS,OAAQ,IAmBRC,MAjBf,SAAkBC,GAAQ,IAAD,EACGJ,EAAMK,SAAS,QADlB,mBACdC,EADc,KACRC,EADQ,KAOrB,OACI,6BACI,6BAAM,yCAAkB,6BAD5B,gBAEkBD,EAFlB,KAEyB,6BAAM,6BAAM,6BACjC,+BAAO,oCACP,2BAAOE,KAAK,OAAOC,MAAOH,EAAMI,SATrB,SAACC,GAChBJ,EAAQI,EAAEC,OAAOH,QAQyCI,YAAY,sBCd9Eb,EAAME,SAAS,OAAQ,CAAEY,OAAQ,GAAIC,OAAQ,KA6B9BC,MA3Bf,SAAkBZ,GAAQ,IAAD,EACLJ,EAAMK,SAAS,QAAxBC,EADc,sBAEQN,EAAMK,SAAS,QAFvB,mBAEdY,EAFc,KAENC,EAFM,KAYrB,OACI,6BACI,6BAAM,yCAAkB,6BAD5B,gBAEkBZ,EAFlB,KAEyB,6BAAM,6BAF/B,kBAGoBW,EAAKH,OAAL,UAAiBG,EAAKH,OAAtB,MAAmC,GAHvD,KAG4D,6BAAM,6BAHlE,kBAIoBG,EAAKF,OAAL,UAAiBE,EAAKF,OAAtB,OAAoC,GAJxD,KAI6D,6BAAM,6BAAM,6BAErE,+BAAO,sCACP,2BAAOP,KAAK,OAAOC,MAAOQ,EAAKH,OAAQJ,SAhB1B,SAACC,GAClBO,GAAW,SAAAD,GAAUA,EAAKH,OAASH,EAAEC,OAAOH,UAeuBI,YAAY,sBAP/E,IAOsG,6BAClG,+BAAO,sCACP,2BAAOL,KAAK,OAAOC,MAAOQ,EAAKF,OAAQL,SAd1B,SAACC,GAClBO,GAAW,SAAAD,GAAUA,EAAKF,OAASJ,EAAEC,OAAOH,UAauBI,YAAY,wBCHxEM,MArBf,SAAkBf,GAAQ,IAAD,EACKJ,EAAMK,SAAS,WAAY,CAAEe,QAAS,UAD3C,mBACdC,EADc,KACPC,EADO,KAWrB,OACI,6BACI,6BAAM,yCAAkB,6BAD5B,yBAE2BD,EAF3B,IAEkC,6BAAM,6BAAM,6BAC1C,2BAAOb,KAAK,OAAOC,MAAOY,EAAOX,SAZrB,SAACC,GACjBW,EAASX,EAAEC,OAAOH,QAW0CI,YAAY,yBACpE,4BAAQU,QATF,SAACZ,GACXX,EAAMwB,OAAO,YAAY,iBAQrB,WCQZC,IAASC,OAAO,mBAhBhB,SAAqBtB,GACjB,OACI,kBAAC,IAAD,CAAQuB,KAAK,KACT,6BADJ,IACU,6BADV,IACgB,6BADhB,IACsB,6BAClB,kBAAC,IAAD,CAAMC,GAAG,aAAT,YAFJ,aAGI,kBAAC,IAAD,CAAMA,GAAG,aAAT,YAHJ,aAII,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,YAAYC,UAAW5B,IACzC,kBAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,YAAYC,UAAWf,IACzC,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,YAAYC,UAAWZ,QAMzC,MAAgBa,SAASC,cAAc,Y","file":"static/js/main.b389f3e8.chunk.js","sourcesContent":["import { createStore } from 'state-pool';\n\nconst store = createStore();\n\n/*\n// ===================================================\n// Use this if you want to allow store persistance in local storage\nlet timerId = null\nconst DEBOUNCE_TIME = 1000  // In milliseconds\n\nstore.persist({\n    // PERSIST_ENTIRE_STORE: true,  // Use this only if you want to persist the entire store\n    saveState: function (key, value, isInitialSet) {\n        const doStateSaving = () => {\n            try {\n                const serializedState = JSON.stringify(value);\n                window.localStorage.setItem(key, serializedState);\n            } catch {\n                // Ignore write errors\n            }\n        }\n\n        if (isInitialSet) {\n            // We don't debounce saving state since it's the initial set\n            // so it's called only once and we need our storage to be updated\n            // right away\n            doStateSaving();\n        }\n        else {\n            // Here we debounce saving state because it's the update and this function\n            // is called every time the store state changes. However, it should not\n            // be called too often because it triggers the expensive `JSON.stringify` operation.\n            clearTimeout(timerId);\n            timerId = setTimeout(() => {\n\n            }, DEBOUNCE_TIME);\n        }\n    },\n    loadState: function (key) {\n        try {\n            const serializedState = window.localStorage.getItem(key);\n            if (serializedState === null) {\n                // No state saved\n                return undefined\n            }\n            return JSON.parse(serializedState);\n        } catch (err) {\n            // Failed to load state\n            return undefined\n        }\n    },\n    removeState: function (key) {\n        window.localStorage.removeItem(key);\n    },\n    clear: function () {\n        window.localStorage.clear();\n    }\n})\n// ===================================================\n*/\n\n\nexport default store;\n","import React from 'react';\nimport store from '../store';\n\n\nstore.setState(\"name\", \"\");\n\nfunction Example1(props) {\n    const [name, setName] = store.useState(\"name\");\n\n    const updateName = (e) => {\n        setName(e.target.value);\n    }\n\n    return (\n        <div>\n            <br /><h3>Example 1</h3><br />\n            My name is : {name}  <br /><br /><br />\n            <label><b>Name</b></label>\n            <input type=\"text\" value={name} onChange={updateName} placeholder=\"Enter your name\" />\n        </div>\n    );\n}\n\nexport default Example1;\n","import React from 'react';\nimport store from '../store';\n\n\nstore.setState(\"user\", { height: \"\", weight: \"\" });\n\nfunction Example2(props) {\n    const [name,] = store.useState(\"name\")\n    const [user, , updateUser] = store.useState(\"user\")\n\n    const updateHeight = (e) => {\n        updateUser(user => { user.height = e.target.value });\n    }\n\n    const updateWeight = (e) => {\n        updateUser(user => { user.weight = e.target.value });\n    }\n\n    return (\n        <div>\n            <br /><h3>Example 2</h3><br />\n            My name is : {name}  <br /><br />\n            My height is : {user.height ? `${user.height} m` : ''}  <br /><br />\n            My weight is : {user.weight ? `${user.weight} kg` : ''}  <br /><br /><br />\n\n            <label><b>Height</b></label>\n            <input type=\"text\" value={user.height} onChange={updateHeight} placeholder=\"Enter your height\" /> <br />\n            <label><b>Weight</b></label>\n            <input type=\"text\" value={user.weight} onChange={updateWeight} placeholder=\"Enter your weight\" />\n        </div>\n    );\n}\n\nexport default Example2;\n","import React from 'react';\nimport store from '../store';\n\n\nfunction Example3(props) {\n    const [color, setColor] = store.useState(\"favColor\", { default: \"black\" })\n\n    const updateColor = (e) => {\n        setColor(e.target.value);\n    }\n\n    const reset = (e) => {\n        store.remove(\"favColor\", () => { })\n    }\n\n    return (\n        <div>\n            <br /><h3>Example 3</h3><br />\n            My favourite color is {color} <br /><br /><br />\n            <input type=\"text\" value={color} onChange={updateColor} placeholder=\"Enter your fav color\" />\n            <button onClick={reset}>Reset</button>\n        </div>\n    );\n}\n\nexport default Example3;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {\n    HashRouter as Router, Switch, Route, Link\n} from 'react-router-dom';\n\nimport Example1 from './components/Example1'\nimport Example2 from './components/Example2';\nimport Example3 from './components/Example3';\n\n\nfunction Application(props) {\n    return (\n        <Router base=\"/\">\n            <br/> <br/> <br/> <br/>\n            <Link to=\"/example1\">Example1</Link> &nbsp; &nbsp;\n            <Link to=\"/example2\">Example2</Link> &nbsp; &nbsp;\n            <Link to=\"/example3\">Example3</Link>\n            <Switch>\n                <Route exact path=\"/example1\" component={Example1} />\n                <Route exact path=\"/example2\" component={Example2} />\n                <Route exact path=\"/example3\" component={Example3} />\n            </Switch>\n        </Router>\n    );\n}\n\nReactDOM.render(<Application/>, document.querySelector(\"#root\"));\n"],"sourceRoot":""}